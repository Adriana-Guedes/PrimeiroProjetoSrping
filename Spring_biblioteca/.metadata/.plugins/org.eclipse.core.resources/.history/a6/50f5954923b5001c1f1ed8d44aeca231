//CLASSE DE INICIALIZAÇÃO PARA TESTES

package br.com.empresa.inicializacao;


import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.stereotype.Component;

import br.com.empresa.entity.Aluno;
import br.com.empresa.entity.Turma;
import br.com.empresa.repository.AlunoRepository;
import br.com.empresa.service.TurmaService;

@Component //CLASSE PARA SER INICIALIZADA SEMPRE QUE A APLICAÇÃO FOR STARTADA (NECESSÁRIO IMPLEMENTAR ESSA INTERFACE DO JPA ( ApplicationListener<ContextRefreshedEvent>  )
public class Init implements ApplicationListener<ContextRefreshedEvent> {
	
	//ASSIM QUE A APLICAÇÃO SUBIR O METODO A SER USADO SERÁ
	@Autowired
	AlunoRepository alunoRepo; // NÃO É MUITO INDICADO CHAMAR O REPOSITORIO
	
	@Autowired  //PARA CHAMAR A CLASSE DE SERVIÇO
	TurmaService  turmaService; //CHAMAR SEMPRE A DE SERVIÇO
	



	@Override  //PERSISTENCIA DO ALUNO
	public void onApplicationEvent(ContextRefreshedEvent event) { //TESTAR SE ESTA TUDO FUNCIONANDO , E FAZER UMA CARGA DE DADOS
		
		//CARGA DE ALUNO
		Aluno aluno1 = new Aluno();
		aluno1.setNome("Lucas");
		
		Aluno aluno2 = new Aluno();
		aluno2.setNome("Arthur");
		
		Aluno aluno3 = new Aluno();
		aluno3.setNome("João");
		
		alunoRepo.saveAll(Arrays.asList(aluno1,aluno2,aluno3)); // MESMA COISA QUE INSERTO INTO ALUNO( NOME ) VALUES ('NOME INSERIDO')
		
		
		//CARGA DE TURMA (PERSISTIR )
		Turma ads = new Turma();
		ads.setNome("ADS");
		
		Turma rede = new Turma();
		rede.setNome("REDE");
		
		turmaService.salvar(ads);
		turmaService.salvar(rede);
		
		List<Turma> listaTurmas = turmaService.listaTodasTurmas();
		for (Turma turma : listaTurmas) {
			System.out.println("Nome da turma: " + turma.getNome());
			
		}
		
				
		
		
	}
	
	

}
